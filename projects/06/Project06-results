Script started on Tue 12 Mar 2019 11:23:40 PM EDT
wc25@gold18:~/CS214/projects/06$ cat array.java
/* array.java creates an array, reads values, and prints it back out 
 * Completed by: David Choi
 ***************************************************************/

import java.io.*;
import java.util.Scanner;

// java class array
public class array
{
  // main program
  public static void main(String[] args){
  	Scanner keyboard = new Scanner(System.in);

  	System.out.println("\nEnter the size of the array: ");

  	int size = Integer.parseInt(keyboard.next());
  	double[] aArray = new double[size];

  	aArray = readArray(aArray, aArray.length, keyboard);
  	printArray(aArray);
  }
    

  public static double[] printArray(double[] aArray){
  	for(int i = 0; i < aArray.length; i++)
  		System.out.print(aArray[i] + "\n");
  	return aArray;
  }

  public static double[] readArray(double aArray[], int size, Scanner keyboard){
  	System.out.println("\nEnter the values for the array: ");
  	for(int i = 0; i < size; i ++)
  		aArray[i] = Double.parseDouble(keyboard.next());
  	return aArray;
  }
}

wc25@gold18:~/CS214/projects/06$ javac -deprecation array.java
wc25@gold18:~/CS214/projects/06$ a java array

Enter the size of the array: 
3

Enter the values for the array: 
1 2 3
1.0
2.0
3.0
wc25@gold18:~/CS214/projects/06$ exit

Script done on Tue 12 Mar 2019 11:24:47 PM EDT
Script started on Tue 12 Mar 2019 11:25:40 PM EDT
wc25@gold18:~/CS214/projects/06$ cat arrayProgram.adb
-- array.adb creates an array, reads values, and prints it back out  
--
-- Input: input for array size, and values to fill the array
-- 
-- Output: values in the array
--
-- Begun by: Dr. Adams, for CS 214 at Calvin College.
-- Completed by: David Choi
-- Date: 3-11-2019
--------------------------------------------------------------

with Ada.Text_IO, Ada.Float_Text_IO, Ada.Integer_Text_IO;
use Ada.Text_IO, Ada.Float_Text_IO, Ada.Integer_Text_IO;

procedure arrayProgram is

type Vector is array ( Positive range <>) of Float;
size : Integer := 0;

procedure printArray (aArray : in Vector) is

begin
	for i in aArray'Range loop
		Put(aArray(i));
		Put(" ");
	end loop;
end printArray;

function readArray(size : in Integer) return Vector is
aArray : Vector (1 .. size);
temp : Float := 0.0;
begin
	put_line("Enter the value(s): ");
	for i in aArray'Range loop
		get(temp);
		aArray(i) := temp;
	end loop;
	return aArray;
end readArray;

begin
	put_line("Enter the size of the array: ");
	get(size);
	printArray(readArray(size));


end arrayProgram;

wc25@gold18:~/CS214/projects/06$ gnatmake arrayProgram
gnatmake: "arrayProgram" up to date.
wc25@gold18:~/CS214/projects/06$ ./arrayProgram
Enter the size of the array: 
5
Enter the value(s): 
1 2 3 4 5
 1.00000E+00  2.00000E+00  3.00000E+00  4.00000E+00  5.00000E+00 
wc25@gold18:~/CS214/projects/06$ exit

Script done on Tue 12 Mar 2019 11:26:05 PM EDT
Script started on Tue 12 Mar 2019 11:27:06 PM EDT
wc25@gold18:~/CS214/projects/06$ cd clojure
wc25@gold18:~/CS214/projects/06/clojure$ cd src
wc25@gold18:~/CS214/projects/06/clojure/src$ cat array.clj
;;;; array.clj creates an array, reads values, and prints it back out 
;;;;
;;;; Input: size of the array and the value(s) to be store in the array
;;;; Output: the value(s) in the array
;;;;
;;;; Completed by: David Choi
;;;; Date: 3-11-2014
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(ns array)      ; name the program

(defn printArray [aArray]
	(doseq [item aArray]
		(println item)
	)
)

(defn readArray [aArray aSize]
	(loop [i 0]
		(when (< i aSize)
			(print "Enter in value for array: ")(flush)
			(let [value(read)]
			(aset-float aArray i value)
			(recur(inc i)))
		)
	)
)


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; main function
;;; Input: a, b, c
;;; Output: quadratic roots of given values
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(defn -main []
	(println "Enter the size of the array: ")(flush)
	(let
		[aSize(read)
		aArray(make-array Float/TYPE aSize)]
		aArray(readArray aArray aSize)
		(printArray aArray)
		) 
)

wc25@gold18:~/CS214/projects/06/clojure/src$ cd ..
wc25@gold18:~/CS214/projects/06/clojure$ clojure -m array
Enter the size of the array: 
4
Enter in value for array: 1 2 3 4
Enter in value for array: Enter in value for array: Enter in value for array: 
1.0
2.0
3.0
4.0
wc25@gold18:~/CS214/projects/06/clojure$ exit

Script done on Tue 12 Mar 2019 11:27:38 PM EDT
Script started on Tue 12 Mar 2019 11:26:13 PM EDT
wc25@gold18:~/CS214/projects/06$ cat arrayr .rb
# array.rb creates an array, reads values, and prints it back out 
#
# Input: array size, an int, values, ints,
# Output: values stores in the array
#
# Begun by: Prof. Adams, for CS 214 at Calvin College.
# Completed by: David Choi
# Date: 3-11-2019
#################################################################


def printArray(aArray)
  aArray.each{ |x| print x, " "}
end

def readArray(aArray, size)
  puts "Enter the values of the array: "
  for i in 0..size-1 do 
    aArray[i] = gets.to_f
  end
  printArray(aArray)
end

def main
  puts "Enter the size of the array: "
  size = gets.to_i
  aArray = Array.new(size)
  readArray(aArray, size)
end

mainwc25@gold18:~/CS214/projects/06$ ruby array.rb
Enter the size of the array: 
4
Enter the values of the array: 
1
2
4
5
1.0 2.0 4.0 5.0 wc25@gold18:~/CS214/projects/06$ exit

Script done on Tue 12 Mar 2019 11:27:00 PM EDT
