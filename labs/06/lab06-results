Script started on Thu 07 Mar 2019 02:31:31 PM EST
wc25@gold02:~/CS214/labs/06$ cat Average.java
/* Average.java is a driver for method avg().
 *
 * Started by: Prof. Adams, for CS 214 at Calvin College
 *
 * Student Name: David Weonseok Choi
 * Date: 3-7-2019
 *
 * Precondition: theArray, is an array of double values.
 * Output: the average of the numbers in theArray.
 ***************************************************************/

import java.io.*;

public class Average
{
  public static void main(String[] args) {
  	double[] array0 = {};
  	double[] array1 = {9.0, 8.0, 7.0, 6.0};


    // output the average of the values in the arrays
    System.out.println("The first average is " + avg(array0));
    System.out.println("The second average is " + avg(array1));
  }
  

  /* sum() is a method that computes the sum of all the values
   * in an array of doubles.
   * Receive: anArray, an array of doubles.
   * Return: the sum of the values in anArray.
   ************************************************************/

  public static double sum(double[] aArray){
  	double total = 0.0;
  	for(int i = 0; i < aArray.length; i++){
  		total += aArray[i];
  	}
  	return total;
  }
  

  /* avg() is a method that computes the average of the values
   * in an array.
   * Receive: anArray, an array of doubles.
   * Return: the average of the values in anArray.
   **************************************************************/
  
  public static double avg(double bArray[]){
  	if( bArray == null || bArray.length <= 0){
  		return 0.0;
  	}

  	else
  		return sum(bArray) / bArray.length;
  }

}

wc25@gold02:~/CS214/labs/06$ - javac -deprecation Average.java
wc25@gold02:~/CS214/labs/06$ java Average
The first average is 0.0
The second average is 7.5
wc25@gold02:~/CS214/labs/06$ exit

Script done on Thu 07 Mar 2019 02:31:57 PM EST
Script started on Thu 07 Mar 2019 02:32:04 PM EST
wc25@gold02:~/CS214/labs/06$ cat average.d ab db
-- average.adb "test-drives" function Average.
-- Precondition: theArray is an array of numbers.
-- Output: the average of the numbers.
--
-- Begun by: Dr. Adams, CS 214 at Calvin College.
-- Completed by: David Weonseok Choi
-- Date:3-7-2019
-----------------------------------------------

with Ada.Text_IO; use Ada.Text_IO;             -- Put(String)
with Ada.Float_Text_IO; use Ada.Float_Text_IO; -- Put(Float)

procedure average is


-- Declare Vector type
	type Vector is array (Positive range<> ) of Float;


-- Define array0 as an array containing no values
	array0 : Vector := (0.0, 0.0);
-- Define array1 as an array containing 9, 8, 7, 6
	array1 : Vector := (9.0, 8.0, 7.0, 6.0);

----------------------------------------------
-- sum() sums the values in an array           -
-- Receive: anArray, an array of numbers     -
-- Return: the sum of the values in anArray. -
----------------------------------------------

-- Replace this line with definition of sum()
function sum(aArray : in Vector) return Float is
	total : Float := 0.0;
	begin
		for i in aArray'Range
		loop
			total := total + aArray(i);
		end loop;
		return total;
	end sum;


-- Replace this line with documentation and definition of average()
function average( aArray : in Vector) return Float is
	begin
		return (sum(aArray) / Float(aArray'Length));
	end average;

begin
   Put(" average 0 is ");
   Put( average(array0) );
   New_line;
   Put(" average 1 is ");
   Put( average(array1) );
   New_line;
end average;

wc25@gold02:~/CS214/labs/06$ gnatmake average
gnatmake: "average" up to date.
wc25@gold02:~/CS214/labs/06$ ./average
 average 0 is  0.00000E+00
 average 1 is  7.50000E+00
wc25@gold02:~/CS214/labs/06$ exit

Script done on Thu 07 Mar 2019 02:32:30 PM EST
Script started on Thu 07 Mar 2019 02:32:35 PM EST
wc25@gold02:~/CS214/labs/06$ cd clojure
wc25@gold02:~/CS214/labs/06/clojure$ cd src
wc25@gold02:~/CS214/labs/06/clojure/src$ cat average.clj
;; average.clj "test-drives" function average().
;;
;; Output: the average of a sequence of numbers.
;;
;; Usage: clojure -m average
;;
;; Begun by: Dr. Adams, CS 214 at Calvin College.
;; Completed by:
;; Date:
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(ns average)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; sum() sums the values in a vector.       
;; Receive: aVec, a vector of numbers.
;; Return: the sum of the values in aVec.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;; Replace this line with the definition of sum()
(defn sum [aVec]
  (if (vector? aVec)      ; if aVec is a vector
    (if (empty? aVec)     ;   if aVec is empty:
      0.0                 ;     return 0
      (+ (peek aVec)      ;   else return the last value
         (sum (pop aVec)) ;    + sum(all but the last value)
      )
    )
  )
)

;; Replace this line with the definition of sum2()
(defn sum2 [aVec]
  (if (vector? aVec)      ; if aVec is a vector:
    (if (empty? aVec)     ;   if aVec is empty:
      0.0                 ;    return 0
      (reduce + aVec)     ;   else reduce aVec using +
    )
  )
)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; average() computes the average of a vector of numbers.
;; Receive: aVec, a vector of numbers. 
;; Return: the average of the numbers in aVec.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   
;; Replace this line with the definition of average()
(defn average [aVec]
  (if (vector? aVec)
    (if (empty? aVec)
      0.0
      (/ (reduce + aVec) (count aVec))
    )
  )
)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; main function to test functions sum() and average()
;; Output: the sum and average of some test vectors.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(defn -main []
  (let
    [ emptyVec []
      testVec  [9.0 8.0 7.0 6.0]
    ]

    (print "\nThe empty vec: " emptyVec) 
    (print "\nThe test  vec: " testVec) 
    (println "\n")

    ; Test sum()...
    (printf "\nThe first sum is %.3f\n" (sum emptyVec))
    (printf "The second sum is %.3f\n" (sum testVec))

    ; Test average()...
    (printf "\nThe first average is %.3f\n" (average emptyVec))
    (printf "The second average is %.3f\n" (average testVec))
    (println "\n")

    ; Test sum2()...
    (printf "\nThe first sum2 is %.3f\n" (sum2 emptyVec))
    (printf "The second sum2 is %.3f\n" (sum2 testVec))
    (println "\n")
  )
)

wc25@gold02:~/CS214/labs/06/clojure/src$ cd ..
wc25@gold02:~/CS214/labs/06/clojure$ clojure -m average

The empty vec:  []
The test  vec:  [9.0 8.0 7.0 6.0]


The first sum is 0.000
The second sum is 30.000

The first average is 0.000
The second average is 7.500



The first sum2 is 0.000
The second sum2 is 30.000


wc25@gold02:~/CS214/labs/06/clojure$ exit

Script done on Thu 07 Mar 2019 02:33:02 PM EST
Script started on Thu 07 Mar 2019 02:33:10 PM EST
wc25@gold02:~/CS214/labs/06$ cat ac verage.rb
# average.rb averages the values of an array of doubles.
# Precondition: theArray is an array of numbers
# Output: the average of the values in theArray
#
# Begun by: Dr. Adams, for CS 214 at Calvin College.
# Completed by:: David Weonsok Choi
# Date:   3-7-2019
########################################################

###############################################
# sum() sums the values in an array
# Receive: anArray, an array of numbers
# Return: the sum of the values in anArray.
################################################

# Define sum() method here
def sum (aArray)
	total = 0.0
	aArray.each {|x| total += x}
	return total
end

# Document and define average() method here
def average (aArray)
	if aArray.size <= 0 then
		return 0.0
	else
		return (sum(aArray) / aArray.size)
	end
end


def main
   # Define array0 as an Array containing no values
   array0 = []
   # Define array1 as an Array containing 9.0, 8.0, 7.0, 6.0
   array1 = [9.0, 8.0, 7.0, 6.0]

   puts "sum 0 is: #{ sum(array0) }\n"
   puts "sum 1 is: #{ sum(array1) }\n"

   puts "average 0 is: #{ average(array0) }\n"
   puts "average 1 is: #{ average(array1) }\n"
end

main

wc25@gold02:~/CS214/labs/06$ ruby average.jb  rb
sum 0 is: 0.0
sum 1 is: 30.0
average 0 is: 0.0
average 1 is: 7.5
wc25@gold02:~/CS214/labs/06$ exit

Script done on Thu 07 Mar 2019 02:33:35 PM EST
