Script started on Fri 22 Feb 2019 07:49:22 PM EST
wc25@gold07:~/CS214/labs/04$ cat LogTable.java
/* LogTable.java displays a table of logarithms.
 *
 * Input: start, stop and increment, three doubles.
 * PRE: start < stop && increment > 0.
 * Output: A table of logarithms from start to stop,
 *         with increment as the step value.
 * Begun by: Nelesen, for CS 214 at Calvin College.
 * Completed by: David Choi
 ********************************************************/
import java.util.Scanner; 		// Get input

class LogTable{

  public static void main(String[] args){
    Scanner keyboard = new Scanner(System.in);
    System.out.println("To display a table of logarithms,");
    System.out.println("enter the start, stop and increment values: ");
    double start, stop, increment;
    start = keyboard.nextDouble();
    stop = keyboard.nextDouble();
    increment = keyboard.nextDouble();

    while(start <= stop){
    	System.out.println("The log of " + start + " is " + Math.log10(start));
    	start = start + increment;
    }

  }
}

wc25@gold07:~/CS214/labs/04$ javac -deprecation LogTable.java
wc25@gold07:~/CS214/labs/04$ java LogTable
To display a table of logarithms,
enter the start, stop and increment values: 
1 5 0.5
The log of 1.0 is 0.0
The log of 1.5 is 0.17609125905568124
The log of 2.0 is 0.3010299956639812
The log of 2.5 is 0.3979400086720376
The log of 3.0 is 0.47712125471966244
The log of 3.5 is 0.5440680443502757
The log of 4.0 is 0.6020599913279624
The log of 4.5 is 0.6532125137753437
The log of 5.0 is 0.6989700043360189
wc25@gold07:~/CS214/labs/04$ exit

Script done on Fri 22 Feb 2019 07:50:12 PM EST
Script started on Fri 22 Feb 2019 07:50:24 PM EST
wc25@gold07:~/CS214/labs/04$ cat log_table.adb
-- log_table.adb computes a table of logarithms.
--
-- Input: start, stop, increment, three reals.
-- Precondition: increment is positive.
-- Output: A table of logarithms beginning with log(start),
--         ending with log(stop), with intervals of increment.
--
-- Begun by: Prof. Adams, for CS 214 at Calvin College.
-- Completed by: David Choi
--------------------------------------------------------------

with Ada.Text_IO, Ada.Float_Text_IO, Ada.Numerics.Elementary_Functions;
use  Ada.Text_IO, Ada.Float_Text_IO, Ada.Numerics.Elementary_Functions;

procedure log_table is

   Start, Stop, Increment : Float;

begin                                           -- Prompt for input
   Put_Line("To print a table of logarithms,");
   Put(" enter the start, stop, and increment values: ");
   Get(Start); Get(Stop); Get(Increment);

   while Start <= Stop loop
   	
   		Put("The logarithm of ");
   		Put(Start);
   		Put(" is ");
   		Put( log(Start, 10.0));
   		New_line;

   		Start := Start + Increment;

   end loop;

end log_table;wc25@gold07:~/CS214/labs/04$ gnatmake log_table
gcc-5 -c log_table.adb
gnatbind-5 -x log_table.ali
gnatlink-5 log_table.ali
wc25@gold07:~/CS214/labs/04$ ./log_table
To print a table of logarithms,
 enter the start, stop, and increment values: 1 5 .05   0.5
The logarithm of  1.00000E+00 is  0.00000E+00
The logarithm of  1.50000E+00 is  1.76091E-01
The logarithm of  2.00000E+00 is  3.01030E-01
The logarithm of  2.50000E+00 is  3.97940E-01
The logarithm of  3.00000E+00 is  4.77121E-01
The logarithm of  3.50000E+00 is  5.44068E-01
The logarithm of  4.00000E+00 is  6.02060E-01
The logarithm of  4.50000E+00 is  6.53212E-01
The logarithm of  5.00000E+00 is  6.98970E-01
wc25@gold07:~/CS214/labs/04$ exit

Script done on Fri 22 Feb 2019 07:50:59 PM EST
Script started on Fri 22 Feb 2019 07:52:33 PM EST
wc25@gold07:~/CS214/labs/04$ cd s clojure
wc25@gold07:~/CS214/labs/04/clojure$ cd src
wc25@gold07:~/CS214/labs/04/clojure/src$ cat logTable.cjl  lj
;;;; logTable.clj displays a table of logarithms.
;;;;
;;;; Input: start, stop and increment, three numbers.
;;;; Precondition: start < stop && increment > 0.
;;;; Output: A table of logarithms from start to stop,
;;;;          with interval of increment.
;;;;
;;;; Begun by: Prof. Adams, for CS 214 at Calvin College.
;;;; Completed by: David Choi
;;;; Date: 2-22-2019
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(ns logTable)                                 ; name the program

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; displayLogTable() recursively generates the log-table.
;;; Receive: start the first value for the table;
;;;          stop, the last  value for the table;
;;;           step, the step value for the table;
;;; Precondition: start < stop && increment > 0.
;;; Output: The table of logs from start to stop, by step.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;; direct-recursive version

; replace this line with the definition of displayLogTable().
(defn displayLogTable [start stop increment]
	(if (<= start stop)
		(do
			(printf "The logarithm of %f is %f\n"
				start (Math/log10 start)
				displayLogTable (+ start increment) stop increment
			)
			
		)
	)
)

(defn displayLogTable2 [start stop increment]
	(loop [i start]
		(when (<= i stop)
			(printf "The logarithm of %f is %f\n"
				i (Math/log10 i)
			)
		(recur (+ i increment))
		)
	)
)

(defn displayLogTable3 [start stop increment]
	(if (<= start stop)
		(do
			(printf "The logarithm of %f is %f\n"
				start (Math/log10 start)

			)
		(recur (+ start increment) stop increment)		
		)
	)
)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; -main is a 'driver' for the displayLogTable() functions.
;;; Input: start, stop and increment.
;;; Output: The table of logarithms 
;;;          from start to stop by increment
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(defn -main []
 (println "To display a table of logarithms,")
 (print " enter the start, stop, and increment values: ") (flush)
 (let
    [ start (double (read))
      stop (double (read))
      increment (double (read))
    ] 
    (println)
    (displayLogTable start stop increment) 
    (println)
    (displayLogTable2 start stop increment) 
    (println)
    (displayLogTable3 start stop increment) 
    (println)
 )
)

wc25@gold07:~/CS214/labs/04/clojure/src$ cd ..
wc25@gold07:~/CS214/labs/04/clojure$ clojure -m logTable
To display a table of logarithms,
 enter the start, stop, and increment values: 1 5 0.5

The logarithm of 1.000000 is 0.000000

The logarithm of 1.000000 is 0.000000
The logarithm of 1.500000 is 0.176091
The logarithm of 2.000000 is 0.301030
The logarithm of 2.500000 is 0.397940
The logarithm of 3.000000 is 0.477121
The logarithm of 3.500000 is 0.544068
The logarithm of 4.000000 is 0.602060
The logarithm of 4.500000 is 0.653213
The logarithm of 5.000000 is 0.698970

The logarithm of 1.000000 is 0.000000
The logarithm of 1.500000 is 0.176091
The logarithm of 2.000000 is 0.301030
The logarithm of 2.500000 is 0.397940
The logarithm of 3.000000 is 0.477121
The logarithm of 3.500000 is 0.544068
The logarithm of 4.000000 is 0.602060
The logarithm of 4.500000 is 0.653213
The logarithm of 5.000000 is 0.698970

wc25@gold07:~/CS214/labs/04/clojure$ exit

Script done on Fri 22 Feb 2019 07:53:04 PM EST
Script started on Fri 22 Feb 2019 07:51:16 PM EST
wc25@gold07:~/CS214/labs/04$ cat logTable.rb
#! /usr/bin/ruby
# logTable.rb displays a table of logarithms
#
# Begun by: Prof. Adams, for CS 214 at Calvin College.
# Completed by: David Choi
#
# Input:  The start, stop and increment values
# Precondition: The start value is less than the stop value, 
#     and the increment is greater than 0
# Output: A table of logarithms from start to stop, with increment
#     as the step value


if __FILE__ == $0
   print "Enter the start value: "
   start = gets.chomp.to_f
   print "Enter the stop value: "
   stop = gets.chomp.to_f
   print "Enter the increment value: "
   increment = gets.chomp.to_f
   
   while start <= stop do
   	
   
   		calc_log = Math.log10(start)

  		 print "The logarithm of #{start} is #{calc_log}."
  		 puts("\n")

  		 start = start + increment
	end

end

wc25@gold07:~/CS214/labs/04$ ruby logTable.rb
Enter the start value: 1
Enter the stop value: 5
Enter the increment value: 0.5
The logarithm of 1.0 is 0.0.
The logarithm of 1.5 is 0.17609125905568124.
The logarithm of 2.0 is 0.3010299956639812.
The logarithm of 2.5 is 0.3979400086720376.
The logarithm of 3.0 is 0.47712125471966244.
The logarithm of 3.5 is 0.5440680443502757.
The logarithm of 4.0 is 0.6020599913279624.
The logarithm of 4.5 is 0.6532125137753437.
The logarithm of 5.0 is 0.6989700043360189.
wc25@gold07:~/CS214/labs/04$ exit

Script done on Fri 22 Feb 2019 07:51:47 PM EST
